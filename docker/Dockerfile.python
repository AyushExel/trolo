# Use an official Python runtime as a parent image
FROM python:3.11-slim-bullseye

# Set environment variables to optimize Python execution
# - PYTHONDONTWRITEBYTECODE: Prevents Python from writing .pyc files to disk
# - PYTHONUNBUFFERED: Ensures output is not buffered, allowing logs to be displayed in real-time
# - PIP_NO_CACHE_DIR: Disables the cache during pip installs to reduce image size
# - PIP_DISABLE_PIP_VERSION_CHECK: Prevents pip from checking for updates, speeding up installs
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install necessary system dependencies for running the app
# These packages are required for building, downloading, and running the application
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \                    
    build-essential \         
    curl \                   
    gcc \                    
    make \                 
    wget \                   
    libgl1-mesa-glx \      
    libglib2.0-0 \         
    libsm6 \              
    libxext6 \         
    libxrender-dev \         
    && apt clean \            
    && rm -rf /var/lib/apt/lists/*

# Clone the repository from GitHub to the /workspace/app directory
RUN git clone https://github.com/AyushExel/trolo.git /workspace/app

# Set the working directory to /workspace/app where the code is located
WORKDIR /workspace/app

# Upgrade pip to the latest version
RUN pip install --upgrade pip

# Install dependencies if requirements.txt or pyproject.toml exists
# This step installs all required Python dependencies for the project
RUN if [ -f requirements.txt ]; then \
        pip install -r requirements.txt; \
    elif [ -f pyproject.toml ]; then \
        pip install . ; \
    fi

# Change the working directory to the trolo directory inside /workspace/app
WORKDIR /workspace/app/trolo

# Set the default command to start the container, allowing either Python or bash
# This enables users to choose whether to run the app or explore the container via bash
CMD ["/bin/bash"]
